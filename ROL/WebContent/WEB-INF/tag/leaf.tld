<?xml version="1.0" encoding="UTF-8" ?>

<taglib xmlns="http://java.sun.com/xml/ns/javaee"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-jsptaglibrary_2_1.xsd"
    version="2.1">


 <tlib-version>1.0</tlib-version>
 <short-name>l</short-name>
 <uri>http://tag.oneflyingleaf.com</uri>
 <description>使用该标签的所有需要查询数据库的内容都需要实现TagService接口,并将该实现注入到BasicTag类的tagServicez中，如果不能注入，直接在该类下实例化该属性。类：com.oneflyingleaf.core.tag.BasicTag</description>
 <!-- lists标签 --> 
 <tag>
 	<name>lists</name>
 	<tag-class>com.oneflyingleaf.core.tag.tag.Lists</tag-class>
 	<body-content>empty</body-content>
 	<description>通过相关的语句或者属性，动态的从数据库中加载记录，并将查找出来的值放入var的名称中，可以使用el表达式进行查询。</description>
 	<example>
 		<![CDATA[
			<l:lists name="Doctor" var="doctors"/>  		
 		    <l:lists name="Doctor" var="doctors" order="name desc"/>
 		    <l:lists name="Doctor"  var="doctors" limit="name = '小明1'" order="name desc"/>
 		    <l:lists name="Doctor"  var="doctors" limit="name = '小明1' and name = " order="name desc" limitCheck='true'/>
 		    <l:lists name="Doctor"  var="doctors"  order="name desc" otherCon="name = '小明1'" limit="name = '小明'"/>
 		    <l:lists name="Doctor"  var="doctors"  order="name desc" likeLimit="name=' '" pageCount="10" pageNow="1"/>
 		    <l:lists name="Doctor" var="doctors" type="hql" hql="from Doctor"/>
 		    <l:lists name="Doctor" var="doctors" type="sql" sql="select * from Doctors order by D_Gener desc,D_Name asc"/>
 		]]>
 	</example>
 	<attribute>
 		<name>name</name>
 		<required>true</required>
 		<rtexprvalue>true</rtexprvalue>
 		<description>javaBean，该实体变量是一个list，每一个属性都是一个该javabean的实例</description>
 	</attribute>
 	<attribute>
 		<name>var</name>
 		<required>true</required>
 		<rtexprvalue>false</rtexprvalue>
		<description>必选，将查询到的值放入该变量中</description>
 	</attribute>
 	<attribute>
 		<name>type</name>
 		<required>false</required>
 		<required>false</required>
 		<description>可选，可以设置hql或者sql</description>
 	</attribute>
 	<attribute>
 		<name>sql</name>
 		<required>false</required>
 		<rtexprvalue>true</rtexprvalue>
 		<description>sql语句，必须可以直接执行的sql，可以使用el表达式</description>
 	</attribute>
 	<attribute>
 		<name>hql</name>
 		<required>false</required>
 		<rtexprvalue>true</rtexprvalue>
 		<description>hql语句，必须是可以直接运行的hql语句，可以使用el表达式</description>
 	</attribute>
 	<attribute>
 		<name>limit</name>
 		<required>false</required>
 		<rtexprvalue>true</rtexprvalue>
 		<description>限制条件语句，可以使用el表达式，对于控制点情况查看limitCheck属性</description>
 	</attribute>
 	<attribute>
 		<name>limitCheck</name>
 		<required>false</required>
 		<rtexprvalue>false</rtexprvalue>
 		<type>boolean</type>
 		<description>该属性判断是否检验limit中的el表达式无值造成的空值问题，true则判断，false则不判断，默认为false，对于el表达式的无值，直接去除该limit对应的字段</description>
 	</attribute>
 	<attribute>
 		<name>otherCon</name>
 		<required>false</required>
 		<rtexprvalue>true</rtexprvalue>
 		<description>直接加到where子句后，该属性可以单独使用，可以和limit结合使用</description>
 	</attribute>
 	<attribute>
 		<name>byCon</name>
 		<required>false</required>
 		<rtexprvalue>false</rtexprvalue>
 		<description>对于检索到的数据进行排序</description>
 	</attribute>
	<attribute>
 		<name>pageCount</name>
 		<required>false</required>
 		<rtexprvalue>true</rtexprvalue>
 		<type>Integer</type>
 		<description>每页的数量，可以只得到一定量的数据，不推荐如果不是分页推荐使用number属性</description>
 	</attribute>
 	<attribute>
 		<name>pageNow</name>
 		<required>false</required>
 		<rtexprvalue>true</rtexprvalue>
 		<type>Integer</type>
 		<description>当前页，从1开始，代表当前是第几页</description>
 	</attribute>
 	<attribute>
 		<name>order</name>
 		<required>false</required>
 		<rtexprvalue>false</rtexprvalue>
 		<description>选择排序</description>
 	</attribute>
 	<attribute>
 		<name>likeLimit</name>
 		<required>false</required>
 		<rtexprvalue>false</rtexprvalue>
 		<description>模糊查询字段</description>
 	</attribute>
 	<attribute>
 		<name>packageName</name>
 		<required>false</required>
 		<rtexprvalue>true</rtexprvalue>
 		<description>实体类的包名，如果实体类缺失将自动寻找config.properties的中的data.package属性来充作packageName</description>
 	</attribute>
	<attribute>
		 <name>onlyOne</name>
		 <required>false</required>
		 <rtexprvalue>false</rtexprvalue>
		 <type>Boolean</type>
		 <description>该记录是否只有一条</description>
	</attribute>
	<attribute>
		 <name>scope</name>
		 <required>false</required>
		 <rtexprvalue>false</rtexprvalue>
		 <description>标签存放的域，默认为jspContext，/现添加session</description>
	</attribute>
	<attribute>
		 <name>sname</name>
		 <required>false</required>
		 <rtexprvalue>false</rtexprvalue>
		 <description>标签存放的域中的名称，不设置为var的值</description>
	</attribute>
<!--  	<attribute>
 		<name>number</name>
 		<required>false</required>
 		<rtexprvalue>false</rtexprvalue>
 		<description>表示需要多少条数据</description>
 	</attribute> -->
 </tag>
 
 <!-- 查询当前的表的数据总数 -->
 <tag>
 	<name>count</name>
	<tag-class>com.oneflyingleaf.core.tag.Count</tag-class>
	<body-content>empty</body-content>
	<description>查询当前的表的数据总数</description>
	<example>
		<![CDATA[
		<l:count name="Doctor"/>
		<l:count name="Doctor" var="dCount"/>${dCount }
		]]>
	</example>
	<attribute>
		<name>name</name>
		<required>true</required>
		<rtexprvalue>false</rtexprvalue>
		<description>表对应的javaBean的名称</description>
	</attribute> 
	<attribute>
		<name>var</name>
		<required>false</required>
		<rtexprvalue>false</rtexprvalue>
		<description>如果存在则將页面总数传入该名称</description>
	</attribute>
 </tag>
<!-- 改写select标签，将其动态的在contextUtils中配置 -->
 <tag>
 	<name>select</name>
 	<tag-class>com.oneflyingleaf.core.tag.Select</tag-class>
 	<body-content>empty</body-content>
 	<description>改写select标签，将其动态的在contextUtils中配置</description>
 	<example>
		<![CDATA[
		<td align="center"><l:select name="doctor.gender" key="SEX" value="${d.gener }"/>
		]]>
	</example>
 	<attribute>
 		<name>name</name>
 		<required>false</required>
 		<rtexprvalue>true</rtexprvalue>
 		<description>名称，以供容器注入</description>
 	</attribute>
 	<attribute>
 	 	<name>key</name>
 		<required>true</required>
 		<rtexprvalue>false</rtexprvalue>
 		<description>select内的值，可以在ContextUtils中配置</description>
 	</attribute>
 	<attribute>
 		<name>value</name>
 		<required>false</required>
 		<rtexprvalue>true</rtexprvalue>
 		<description>需要选中的值的value</description>
 	</attribute>
 </tag>
 
	<!-- 交换标签，交换相关的值 -->
	<tag>
		<name>swap</name>
		<tag-class>com.oneflyingleaf.core.tag.Swap</tag-class>
		<body-content>empty</body-content>
		<description>交换标签，交换相关的值，具体键值在ContextUtils内配置</description>
		<example>
			<![CDATA[
				<td align="center"><l:swap key="SEX" value="${d.gener }"/>
			]]>
		</example>
		<attribute>
			<name>key</name>
			<required>true</required>
			<rtexprvalue>false</rtexprvalue>
			<description>键值</description>
		</attribute>
		<attribute>
			<name>value</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<description>期望交换的值</description>
		</attribute>
	</tag>
</taglib>
